[{"C:\\Users\\Anton\\Desktop\\Todolist\\src\\index.tsx":"1","C:\\Users\\Anton\\Desktop\\Todolist\\src\\serviceWorker.ts":"2","C:\\Users\\Anton\\Desktop\\Todolist\\src\\state\\store.ts":"3","C:\\Users\\Anton\\Desktop\\Todolist\\src\\AppWithRedux.tsx":"4","C:\\Users\\Anton\\Desktop\\Todolist\\src\\state\\tasks-reducer.ts":"5","C:\\Users\\Anton\\Desktop\\Todolist\\src\\state\\todolists-reducer.ts":"6","C:\\Users\\Anton\\Desktop\\Todolist\\src\\Todolist.tsx":"7","C:\\Users\\Anton\\Desktop\\Todolist\\src\\AddItemForm.tsx":"8","C:\\Users\\Anton\\Desktop\\Todolist\\src\\EdiTableTitle.tsx":"9"},{"size":621,"mtime":1608732068882,"results":"10","hashOfConfig":"11"},{"size":5295,"mtime":1605015954471,"results":"12","hashOfConfig":"11"},{"size":898,"mtime":1609792089260,"results":"13","hashOfConfig":"11"},{"size":4250,"mtime":1609163328640,"results":"14","hashOfConfig":"11"},{"size":4111,"mtime":1608755106840,"results":"15","hashOfConfig":"11"},{"size":2936,"mtime":1608751317868,"results":"16","hashOfConfig":"11"},{"size":3923,"mtime":1608753265296,"results":"17","hashOfConfig":"11"},{"size":1473,"mtime":1608751479923,"results":"18","hashOfConfig":"11"},{"size":1098,"mtime":1606247717383,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"6lhkan",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"C:\\Users\\Anton\\Desktop\\Todolist\\src\\index.tsx",[],["44","45"],"C:\\Users\\Anton\\Desktop\\Todolist\\src\\serviceWorker.ts",[],"C:\\Users\\Anton\\Desktop\\Todolist\\src\\state\\store.ts",[],"C:\\Users\\Anton\\Desktop\\Todolist\\src\\AppWithRedux.tsx",["46","47","48","49","50","51","52","53"],"import React, {useCallback} from 'react';\r\nimport {TaskType, Todolist} from './Todolist';\r\nimport {AddItemForm} from \"./AddItemForm\";\r\nimport {AppBar, Grid, Paper, Toolbar} from \"@material-ui/core\";\r\nimport {\r\n    AddTodoListAC,\r\n    ChangeTodoListFilterAC,\r\n    ChangeTodoListTitleAC,\r\n    RemoveTodolistAC,\r\n} from \"./state/todolists-reducer\";\r\nimport {\r\n    addTaskAC,\r\n    removeTaskAC,\r\n    taskStatusAC,\r\n    taskTitleAC\r\n} from \"./state/tasks-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"./state/store\";\r\n\r\n\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\";\r\nexport type TodoListType = {\r\n    id: string\r\n    title: string\r\n    filter: FilterValuesType\r\n}\r\nexport type TasksStateType = {\r\n    [key: string]: Array<TaskType>\r\n}\r\n\r\n\r\nfunction AppWithRedux() {\r\n\r\n    const todoLists = useSelector<AppRootStateType, Array<TodoListType>>(state => state.todoLists)\r\n    const tasks = useSelector<AppRootStateType, TasksStateType>(state => state.tasks)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const removeTask = useCallback((id: string, todoListId: string) => {\r\n        const action = removeTaskAC(id, todoListId)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const addTask = useCallback((title: string, todoListId: string) => {\r\n        const action = addTaskAC(title, todoListId)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const changeStatus = useCallback((id: string, isDone: boolean, todoListId: string) => {\r\n        const action = taskStatusAC(id, isDone, todoListId)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const changeHandlerTaskTitle = useCallback((newTitle: string, idTodoList: string, idTask: string) => {\r\n        const action = taskTitleAC(idTask, idTodoList, newTitle)\r\n        dispatch(action);\r\n    }, [])\r\n\r\n    const changeFilter = useCallback((value: FilterValuesType, id: string) => {\r\n        const action = ChangeTodoListFilterAC(id, value)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const removeTodoList = useCallback((id: string) => {\r\n        const action = RemoveTodolistAC(id)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    const addTodoList = useCallback((title: string) => {\r\n        const action = AddTodoListAC(title);\r\n        dispatch(action);\r\n    }, [])\r\n\r\n    const changeHandlerTodoListTitle = useCallback((newTitle: string, id: string) => {\r\n        const action = ChangeTodoListTitleAC(id, newTitle)\r\n        dispatch(action)\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <AppBar position=\"static\" style={{padding: '10px'}}>\r\n                <Toolbar>\r\n                    <Grid container={true}>\r\n                        <div>Add Todolist</div>\r\n                        <AddItemForm addItem={addTodoList}/>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <div>\r\n                <Grid container={true} style={{padding: '20px'}}>\r\n                    {todoLists.map((tl) => {\r\n                        let tasksForTodolist = tasks[tl.id];\r\n\r\n                        return <Grid item>\r\n                            <Paper elevation={3}\r\n                                   style={{padding: '10px', margin: '10px', height: '340px', position: \"relative\"}}>\r\n                                <Todolist\r\n                                    changeHandlerTaskTitle={changeHandlerTaskTitle}\r\n                                    changeHandlerTitle={changeHandlerTodoListTitle}\r\n                                    key={tl.id}\r\n                                    id={tl.id}\r\n                                    title={tl.title}\r\n                                    tasks={tasksForTodolist}\r\n                                    removeTask={removeTask}\r\n                                    changeFilter={changeFilter}\r\n                                    addTask={addTask}\r\n                                    changeTaskStatus={changeStatus}\r\n                                    filter={tl.filter}\r\n                                    deleteTodoList={removeTodoList}/>\r\n                            </Paper>\r\n                        </Grid>\r\n                    })}\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AppWithRedux;\r\n","C:\\Users\\Anton\\Desktop\\Todolist\\src\\state\\tasks-reducer.ts",["54"],"import {TasksStateType} from '../AppWithRedux';\r\nimport {v1} from \"uuid\";\r\nimport {AddTodoListActionType, RemoveTodoListActionType, todoListId1, todoListId2} from './todolists-reducer'\r\n\r\n\r\nexport type RemoveActionCreatorType = {\r\n    type: 'REMOVE-TASK'\r\n    taskId: string\r\n    todolistId: string\r\n}\r\n\r\nexport type AddTaskActionCreatorType = {\r\n    type: 'ADD-TASK'\r\n    titleTask: string\r\n    todolistId: string\r\n}\r\n\r\nexport type TaskStatusActionCreatorType = {\r\n    type: 'TASK-STATUS'\r\n    taskId: string\r\n    todolistId: string\r\n    taskStatus: boolean\r\n}\r\n\r\nexport type ChangeTitleTaskActionCreatorType = {\r\n    type: 'CHANGE-TITLE'\r\n    taskId: string\r\n    todolistId: string\r\n    taskTitle: string\r\n}\r\n\r\n\r\ntype ActionType =\r\n    RemoveActionCreatorType\r\n    | AddTaskActionCreatorType\r\n    | TaskStatusActionCreatorType\r\n    | ChangeTitleTaskActionCreatorType\r\n    | AddTodoListActionType\r\n    | RemoveTodoListActionType\r\n\r\n\r\nconst initialState: TasksStateType = {\r\n    [todoListId1]: [\r\n        {id: v1(), title: \"HTML&CSS\", isDone: true},\r\n        {id: v1(), title: \"JS\", isDone: true},\r\n        {id: v1(), title: \"ReactJS\", isDone: false},\r\n        {id: v1(), title: \"Rest API\", isDone: false},\r\n        {id: v1(), title: \"GraphQL\", isDone: false}\r\n    ],\r\n    [todoListId2]: [\r\n        {id: v1(), title: \"Book\", isDone: false},\r\n        {id: v1(), title: \"Pen\", isDone: false}\r\n    ]\r\n}\r\n\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionType): TasksStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'REMOVE-TASK': {\r\n\r\n            let copyState = {...state}\r\n            let todolistTasks = copyState[action.todolistId];\r\n            copyState[action.todolistId] = todolistTasks.filter(t => t.id != action.taskId);\r\n            return copyState\r\n        }\r\n        case 'ADD-TASK' : {\r\n\r\n            let copyState = {...state}\r\n            let todolistTasks = copyState[action.todolistId];\r\n            let NewTask = {id: v1(), title: action.titleTask, isDone: false};\r\n            copyState[action.todolistId] = [NewTask, ...todolistTasks];\r\n            return copyState\r\n        }\r\n        case 'TASK-STATUS' : {\r\n\r\n            let copyState = {...state}\r\n            let todolistTasks = copyState[action.todolistId];\r\n            let task = todolistTasks.find((t) => t.id === action.taskId);\r\n            if (task) {\r\n                task.isDone = action.taskStatus;\r\n            }\r\n            copyState[action.todolistId] = [...todolistTasks]\r\n            return copyState\r\n        }\r\n        case 'CHANGE-TITLE' : {\r\n            let copyState = {...state}\r\n            let todoLists = copyState[action.todolistId]\r\n            let todoList = todoLists.find((t) => t.id === action.taskId);\r\n            if (todoList) {\r\n                todoList.title = action.taskTitle;\r\n                copyState[action.todolistId] = [...todoLists]\r\n            }\r\n            return copyState\r\n        }\r\n        case 'ADD-TODOLIST' : {\r\n            let copyState = {...state}\r\n            return {...copyState, [action.newTodoListId]: []}\r\n        }\r\n        case 'REMOVE-TODOLIST' : {\r\n            let copyState = {...state}\r\n            delete copyState[action.id]\r\n            return {...copyState}\r\n        }\r\n        default:\r\n           return state\r\n    }\r\n}\r\n\r\nexport const removeTaskAC = (taskId: string, todolistId: string): RemoveActionCreatorType => {\r\n    return {type: 'REMOVE-TASK', taskId: taskId, todolistId: todolistId}\r\n}\r\n\r\nexport const addTaskAC = (titleTask: string, todolistId: string): AddTaskActionCreatorType => {\r\n    return {type: 'ADD-TASK', titleTask: titleTask, todolistId: todolistId}\r\n}\r\n\r\nexport const taskStatusAC = (taskId: string, taskStatus: boolean, todolistId: string): TaskStatusActionCreatorType => {\r\n    return {type: 'TASK-STATUS', taskId: taskId, todolistId: todolistId, taskStatus: taskStatus}\r\n}\r\n\r\nexport const taskTitleAC = (taskId: string, todolistId: string, taskTitle: string): ChangeTitleTaskActionCreatorType => {\r\n    return {type: \"CHANGE-TITLE\", taskId, taskTitle, todolistId}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Anton\\Desktop\\Todolist\\src\\state\\todolists-reducer.ts",["55"],"import {TodoListType, FilterValuesType} from '../AppWithRedux';\r\nimport {v1} from \"uuid\";\r\n\r\nexport type RemoveTodoListActionType = {\r\n    type: 'REMOVE-TODOLIST'\r\n    id: any  // почему ошибка если ставить string??\r\n}\r\n\r\nexport type ChangeTodoListTitleActionType = {\r\n    type: 'CHANGE-TODOLIST-TITLE'\r\n    id: string\r\n    title: string\r\n}\r\n\r\nexport type ChangeTodoListActionType = {\r\n    type: 'CHANGE-TODOLIST-FILTER'\r\n    id: string\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport type AddTodoListActionType = {\r\n    type: 'ADD-TODOLIST'\r\n    title: string\r\n    newTodoListId: string\r\n}\r\n\r\ntype ActionType =\r\n    RemoveTodoListActionType\r\n    | ChangeTodoListTitleActionType\r\n    | ChangeTodoListActionType\r\n    | AddTodoListActionType\r\n\r\n\r\n\r\n export let todoListId1 = v1();\r\n export let todoListId2 = v1();\r\n\r\nconst initialState: Array<TodoListType> = [\r\n    {id: todoListId1, title: \"What to learn\", filter: \"all\"},\r\n    {id: todoListId2, title: \"What to by\", filter: \"all\"}\r\n]\r\n\r\n\r\nexport const todoListsReducer = (state: Array<TodoListType> = initialState, action: ActionType): Array<TodoListType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST': {\r\n            let todoLists = state.filter((tl) => tl.id !== action.id);\r\n            delete state[action.id];\r\n            return [...todoLists]\r\n        }\r\n        case 'CHANGE-TODOLIST-TITLE': {\r\n            let todoList = state.find((t) => t.id === action.id);\r\n            if (todoList) {\r\n                todoList.title = action.title;\r\n            }\r\n            return [...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-FILTER' : {\r\n            state.find((tl) => {\r\n                if (tl.id === action.id) {\r\n                    tl.filter = action.filter;\r\n                }\r\n            })\r\n            return [...state]\r\n        }\r\n        case 'ADD-TODOLIST' : {\r\n            let newTodoList: TodoListType = {id: action.newTodoListId, title: action.title, filter: \"all\"}\r\n            return [...state, newTodoList]\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const RemoveTodolistAC = (todolistId: string): RemoveTodoListActionType => {\r\n    return {type: 'REMOVE-TODOLIST', id: todolistId}\r\n}\r\n\r\nexport const ChangeTodoListTitleAC = (todolistId: string, newTodolistTitle: string): ChangeTodoListTitleActionType => {\r\n    return {\r\n        type: 'CHANGE-TODOLIST-TITLE' as const,\r\n        id: todolistId,\r\n        title: newTodolistTitle\r\n    }\r\n}\r\n\r\nexport const ChangeTodoListFilterAC = (todolistId: string, newFilter: FilterValuesType): ChangeTodoListActionType => {\r\n    return {\r\n        type: 'CHANGE-TODOLIST-FILTER' as const,\r\n        id: todolistId,\r\n        filter: newFilter\r\n    }\r\n}\r\n\r\nexport const AddTodoListAC = (newTodolistTitle: string): AddTodoListActionType => {\r\n    return {\r\n        type: 'ADD-TODOLIST',\r\n        title: newTodolistTitle,\r\n        newTodoListId: v1()\r\n    }\r\n}","C:\\Users\\Anton\\Desktop\\Todolist\\src\\Todolist.tsx",["56"],"import React, {ChangeEvent, useCallback} from 'react';\r\nimport {FilterValuesType} from './AppWithRedux';\r\nimport './App.css';\r\nimport {AddItemForm} from \"./AddItemForm\";\r\nimport {EdiTableTitle} from \"./EdiTableTitle\";\r\nimport {Button, ButtonGroup, Checkbox, IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    removeTask: (taskId: string, todoListId: string) => void\r\n    changeFilter: (value: FilterValuesType, id: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, isDone: boolean, todoListId: string) => void\r\n    filter: string\r\n    id: string\r\n    deleteTodoList: (id: string) => void\r\n    changeHandlerTitle: (newTitle: string, id: string) => void\r\n    changeHandlerTaskTitle: (newTitle: string, id: string, idTask: string) => void\r\n}\r\n\r\n\r\n\r\n\r\nexport const Todolist = React.memo(function(props: PropsType){\r\n    console.log('Todolist')\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id);\r\n    },[])\r\n    const buttonDelete = () => props.deleteTodoList(props.id);\r\n    const onAllClickHandler = () => props.changeFilter(\"all\", props.id);\r\n    const onActiveClickHandler = () => props.changeFilter(\"active\", props.id);\r\n    const onCompletedClickHandler = () => props.changeFilter(\"completed\", props.id);\r\n    const onChangeTitle = (newTitle: string) => props.changeHandlerTitle(newTitle, props.id);\r\n\r\n    let tasksForTodolist = props.tasks;\r\n\r\n    if (props.filter === \"active\") {\r\n        tasksForTodolist = props.tasks.filter(t => !t.isDone);\r\n    }\r\n    if (props.filter === \"completed\") {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone);\r\n    }\r\n\r\n\r\n    return <div>\r\n\r\n        <EdiTableTitle title={props.title} onChange={onChangeTitle}/>\r\n        <button className={'buttonDelete'} onClick={buttonDelete}>&#10006;</button>\r\n        <AddItemForm addItem={addTask}/>\r\n\r\n        <ul className={'wrapperTasks'}>\r\n            {\r\n                tasksForTodolist.map(t => {\r\n\r\n                    const onChangeTaskTitle = (newTitle: string) => props.changeHandlerTaskTitle(newTitle, props.id, t.id);\r\n                    const ChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n                        props.changeTaskStatus(t.id, e.currentTarget.checked, props.id);\r\n                    }\r\n                    const onClickHandler = () => props.removeTask(t.id, props.id);\r\n                    return <div key={t.id}>\r\n                        <Checkbox checked={t.isDone} onChange={ChangeHandler} color=\"primary\" size=\"small\"/>\r\n                        <span className={t.isDone ? \"task_is_done\" : \"\"}>\r\n                            <EdiTableTitle title={t.title} onChange={onChangeTaskTitle}/>\r\n                        </span>\r\n                        <IconButton onClick={onClickHandler} size=\"small\"> <Delete/></IconButton>\r\n                    </div>\r\n                })\r\n            }\r\n        </ul>\r\n        <div style={{position: \"absolute\", bottom: '10px', left: '30px'}}>\r\n            <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\" size=\"small\">\r\n                <Button color={props.filter === \"all\" ? \"primary\" : \"inherit\"} onClick={onAllClickHandler}\r\n                >All</Button>\r\n\r\n                <Button color={props.filter === \"active\" ? \"primary\" : \"inherit\"} onClick={onActiveClickHandler}\r\n                >Active\r\n                </Button>\r\n\r\n                <Button color={props.filter === \"completed\" ? \"primary\" : \"inherit\"}\r\n                        onClick={onCompletedClickHandler}>Completed\r\n                </Button>\r\n            </ButtonGroup>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Anton\\Desktop\\Todolist\\src\\AddItemForm.tsx",[],"C:\\Users\\Anton\\Desktop\\Todolist\\src\\EdiTableTitle.tsx",[],["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":43,"column":8,"nodeType":"65","endLine":43,"endColumn":10,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"64","line":48,"column":8,"nodeType":"65","endLine":48,"endColumn":10,"suggestions":"67"},{"ruleId":"63","severity":1,"message":"64","line":53,"column":8,"nodeType":"65","endLine":53,"endColumn":10,"suggestions":"68"},{"ruleId":"63","severity":1,"message":"64","line":58,"column":8,"nodeType":"65","endLine":58,"endColumn":10,"suggestions":"69"},{"ruleId":"63","severity":1,"message":"64","line":63,"column":8,"nodeType":"65","endLine":63,"endColumn":10,"suggestions":"70"},{"ruleId":"63","severity":1,"message":"64","line":68,"column":8,"nodeType":"65","endLine":68,"endColumn":10,"suggestions":"71"},{"ruleId":"63","severity":1,"message":"64","line":73,"column":8,"nodeType":"65","endLine":73,"endColumn":10,"suggestions":"72"},{"ruleId":"63","severity":1,"message":"64","line":78,"column":8,"nodeType":"65","endLine":78,"endColumn":10,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":64,"column":75,"nodeType":"76","messageId":"77","endLine":64,"endColumn":77},{"ruleId":"78","severity":1,"message":"79","line":59,"column":29,"nodeType":"80","messageId":"81","endLine":59,"endColumn":31},{"ruleId":"63","severity":1,"message":"82","line":37,"column":7,"nodeType":"65","endLine":37,"endColumn":9,"suggestions":"83"},{"ruleId":"59","replacedBy":"84"},{"ruleId":"61","replacedBy":"85"},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["88"],["89"],["90"],["91"],["92"],["93"],["94"],["95"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["96"],["86"],["87"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},{"desc":"97","fix":"100"},{"desc":"97","fix":"101"},{"desc":"97","fix":"102"},{"desc":"97","fix":"103"},{"desc":"97","fix":"104"},{"desc":"97","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [dispatch]",{"range":"108","text":"109"},{"range":"110","text":"109"},{"range":"111","text":"109"},{"range":"112","text":"109"},{"range":"113","text":"109"},{"range":"114","text":"109"},{"range":"115","text":"109"},{"range":"116","text":"109"},"Update the dependencies array to be: [props]",{"range":"117","text":"118"},[1224,1226],"[dispatch]",[1391,1393],[1585,1587],[1800,1802],[1979,1981],[2122,2124],[2267,2269],[2455,2457],[1196,1198],"[props]"]