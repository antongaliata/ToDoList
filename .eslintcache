[{"C:\\Users\\Anton\\Desktop\\Todolist\\src\\index.tsx":"1","C:\\Users\\Anton\\Desktop\\Todolist\\src\\serviceWorker.ts":"2","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\index.tsx":"3","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\serviceWorker.ts":"4","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\reducer\\store.ts":"5","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\reducer\\tasks-reducer.ts":"6","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\reducer\\app-reducer.ts":"7","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\reducer\\todolists-reducer.ts":"8","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\reducer\\auth-reducer.ts":"9","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\requests\\apiRequests.ts":"10","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\utils\\error-utils.ts":"11","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\App.tsx":"12","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\login.tsx":"13","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\Snackbar.tsx":"14","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\AppWithRedux.tsx":"15","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\Todolist.tsx":"16","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\AddItemForm.tsx":"17","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\EdiTableTitle.tsx":"18"},{"size":621,"mtime":1608732068882,"results":"19","hashOfConfig":"20"},{"size":5295,"mtime":1605015954471,"results":"21","hashOfConfig":"20"},{"size":522,"mtime":1626868001367,"results":"22","hashOfConfig":"23"},{"size":5295,"mtime":1620678475346,"results":"24","hashOfConfig":"23"},{"size":1111,"mtime":1621264188711,"results":"25","hashOfConfig":"23"},{"size":7686,"mtime":1626868001446,"results":"26","hashOfConfig":"23"},{"size":2490,"mtime":1620842336081,"results":"27","hashOfConfig":"23"},{"size":6562,"mtime":1626868001521,"results":"28","hashOfConfig":"23"},{"size":2224,"mtime":1620905097476,"results":"29","hashOfConfig":"23"},{"size":2590,"mtime":1626868001435,"results":"30","hashOfConfig":"23"},{"size":770,"mtime":1620905097517,"results":"31","hashOfConfig":"23"},{"size":2344,"mtime":1626868001403,"results":"32","hashOfConfig":"23"},{"size":4243,"mtime":1626868001478,"results":"33","hashOfConfig":"23"},{"size":1039,"mtime":1626868001484,"results":"34","hashOfConfig":"23"},{"size":4199,"mtime":1626868001386,"results":"35","hashOfConfig":"23"},{"size":5118,"mtime":1626868001494,"results":"36","hashOfConfig":"23"},{"size":1441,"mtime":1626867597806,"results":"37","hashOfConfig":"23"},{"size":1435,"mtime":1626865756539,"results":"38","hashOfConfig":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"6lhkan",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q9ni2z",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Anton\\Desktop\\Todolist\\src\\index.tsx",[],["78","79"],"C:\\Users\\Anton\\Desktop\\Todolist\\src\\serviceWorker.ts",[],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\index.tsx",[],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\serviceWorker.ts",[],["80","81"],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\reducer\\store.ts",[],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\reducer\\tasks-reducer.ts",[],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\reducer\\app-reducer.ts",[],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\reducer\\todolists-reducer.ts",["82","83"],"import {TodoListType, FilterValuesType} from '../components/AppWithRedux';\r\nimport {ResponseTodolistType, todoListsAPI} from \"../requests/apiRequests\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppStatusAC, StatusApiRequestType} from \"./app-reducer\";\r\nimport {handlerServerError, handlerServerNetworkError} from \"../utils/error-utils\";\r\n\r\n\r\nexport type RemoveTodoListActionType = {\r\n    type: 'REMOVE-TODOLIST'\r\n    id: string | any\r\n}\r\n\r\nexport type ChangeTodoListTitleActionType = {\r\n    type: 'CHANGE-TODOLIST-TITLE'\r\n    id: string\r\n    title: string\r\n}\r\n\r\nexport type ChangeTodoListActionType = {\r\n    type: 'CHANGE-TODOLIST-FILTER'\r\n    id: string\r\n    filter: FilterValuesType\r\n}\r\n\r\nexport type AddTodoListActionType = {\r\n    type: 'ADD-TODOLIST'\r\n    todoList: ResponseTodolistType\r\n}\r\n\r\n\r\nexport type SetTodoListsActionType = {\r\n    type: 'SET-TODO-LISTS'\r\n    todoLists: Array<ResponseTodolistType>\r\n}\r\n\r\ntype setTodoListEntityStatusType = {\r\n    type: 'ENTITY-STATUS'\r\n    entityStatus: StatusApiRequestType\r\n    todolistId: string\r\n}\r\n\r\ntype ActionType =\r\n    RemoveTodoListActionType\r\n    | ChangeTodoListTitleActionType\r\n    | ChangeTodoListActionType\r\n    | AddTodoListActionType\r\n    | SetTodoListsActionType\r\n    | setTodoListEntityStatusType\r\n\r\n\r\nconst initialState: Array<TodoListType> = []\r\n\r\nexport const todoListsReducer = (state: Array<TodoListType> = initialState, action: ActionType): Array<TodoListType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST': {\r\n            let todoLists = state.filter((tl) => tl.id !== action.id);\r\n            for (let i = 0; i < state.length; i++) {\r\n                if (state[i].id === action.id) {\r\n                    delete state[i]\r\n                }\r\n            }\r\n            return [...todoLists]\r\n        }\r\n        case 'CHANGE-TODOLIST-TITLE': {\r\n            let todoList = state.find((t) => t.id === action.id);\r\n            if (todoList) {\r\n                todoList.title = action.title;\r\n            }\r\n            return [...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-FILTER' : {\r\n            state.find((tl) => {\r\n                if (tl.id === action.id) {\r\n                    tl.filter = action.filter;\r\n                }\r\n            })\r\n            return [...state]\r\n        }\r\n        case 'ADD-TODOLIST' : {\r\n            const newTodoList: TodoListType = {...action.todoList, filter: \"all\", entityStatus: \"idle\"}\r\n            return [newTodoList, ...state ]\r\n        }\r\n\r\n        case 'SET-TODO-LISTS' : {\r\n            return action.todoLists.map((tl) => ({...tl, filter: \"all\", entityStatus: \"idle\"}))\r\n        }\r\n\r\n        case 'ENTITY-STATUS' : {\r\n            state.find((tl) => {\r\n                if (tl.id === action.todolistId) {\r\n                    tl.entityStatus = action.entityStatus\r\n                }\r\n            })\r\n            return [...state]\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setTodoListEntityStatusAC = (entityStatus: StatusApiRequestType, todolistId: string): setTodoListEntityStatusType => {\r\n    return {type: 'ENTITY-STATUS', todolistId, entityStatus}\r\n}\r\n\r\nexport const RemoveTodolistAC = (todolistId: string): RemoveTodoListActionType => {\r\n    return {type: 'REMOVE-TODOLIST', id: todolistId}\r\n}\r\n\r\nexport const ChangeTodoListTitleAC = (todolistId: string, newTodolistTitle: string): ChangeTodoListTitleActionType => {\r\n    return {\r\n        type: 'CHANGE-TODOLIST-TITLE' as const,\r\n        id: todolistId,\r\n        title: newTodolistTitle\r\n    }\r\n}\r\n\r\nexport const ChangeTodoListFilterAC = (todolistId: string, newFilter: FilterValuesType): ChangeTodoListActionType => {\r\n    return {\r\n        type: 'CHANGE-TODOLIST-FILTER' as const,\r\n        id: todolistId,\r\n        filter: newFilter\r\n    }\r\n}\r\n\r\nexport const AddTodoListAC = (todoList: ResponseTodolistType): AddTodoListActionType => {\r\n    return {type: 'ADD-TODOLIST', todoList: todoList}\r\n}\r\n\r\nexport const setTodoListsAC = (todoLists: Array<ResponseTodolistType>): SetTodoListsActionType => {\r\n    return {type: 'SET-TODO-LISTS', todoLists}\r\n}\r\n\r\n\r\nexport const fetchTodoListsTC = () => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todoListsAPI.GetTodolist()\r\n            .then(data => {\r\n                dispatch(setTodoListsAC(data.data))\r\n                dispatch(setAppStatusAC('succeeded'))\r\n            })\r\n            .catch((error) => {\r\n                handlerServerNetworkError(dispatch, error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchCreateTodoList = (title: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        todoListsAPI.CreateTodolist(title)\r\n            .then(res => {\r\n                if (!res.data.messages[0]) {\r\n                    dispatch(AddTodoListAC(res.data.data.item))\r\n                    dispatch(setAppStatusAC('succeeded'))\r\n                } else {\r\n                    handlerServerError(dispatch, res.data)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                handlerServerNetworkError(dispatch, error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchDeleteTodolist = (todolistId: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setTodoListEntityStatusAC('loading', todolistId))\r\n        todoListsAPI.DeleteTodolist(todolistId)\r\n            .then((res) => {\r\n                if (!res.data.messages[0]) {\r\n                    dispatch(RemoveTodolistAC(todolistId))\r\n                    dispatch(setTodoListEntityStatusAC('idle', todolistId))\r\n                } else {\r\n                    handlerServerError(dispatch, res.data)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                handlerServerNetworkError(dispatch, error)\r\n            })\r\n    }\r\n}\r\n\r\nexport const fetchUpdateTodolist = (todolistId: string, title: string) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setTodoListEntityStatusAC('loading', todolistId))\r\n        todoListsAPI.UpdateTodolist(todolistId, title)\r\n            .then((res) => {\r\n                if (!res.data.messages[0]) {\r\n                    dispatch(ChangeTodoListTitleAC(todolistId, title))\r\n                    dispatch(setTodoListEntityStatusAC('idle', todolistId))\r\n                } else {\r\n                    handlerServerError(dispatch, res.data)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                handlerServerNetworkError(dispatch, error)\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\reducer\\auth-reducer.ts",[],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\requests\\apiRequests.ts",[],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\state\\utils\\error-utils.ts",[],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\App.tsx",["84"],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\login.tsx",[],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\Snackbar.tsx",[],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\AppWithRedux.tsx",["85","86","87","88","89","90","91","92","93"],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\Todolist.tsx",["94","95"],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\AddItemForm.tsx",[],"C:\\Users\\Anton\\Desktop\\git_hub\\ToDoList\\src\\components\\EdiTableTitle.tsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"96","replacedBy":"100"},{"ruleId":"98","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":72,"column":29,"nodeType":"104","messageId":"105","endLine":72,"endColumn":31},{"ruleId":"102","severity":1,"message":"103","line":89,"column":29,"nodeType":"104","messageId":"105","endLine":89,"endColumn":31},{"ruleId":"106","severity":1,"message":"107","line":26,"column":8,"nodeType":"108","endLine":26,"endColumn":10,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":45,"column":8,"nodeType":"108","endLine":45,"endColumn":10,"suggestions":"111"},{"ruleId":"106","severity":1,"message":"112","line":51,"column":8,"nodeType":"108","endLine":51,"endColumn":10,"suggestions":"113"},{"ruleId":"106","severity":1,"message":"112","line":56,"column":8,"nodeType":"108","endLine":56,"endColumn":10,"suggestions":"114"},{"ruleId":"106","severity":1,"message":"112","line":61,"column":8,"nodeType":"108","endLine":61,"endColumn":10,"suggestions":"115"},{"ruleId":"106","severity":1,"message":"112","line":66,"column":8,"nodeType":"108","endLine":66,"endColumn":10,"suggestions":"116"},{"ruleId":"106","severity":1,"message":"112","line":71,"column":8,"nodeType":"108","endLine":71,"endColumn":10,"suggestions":"117"},{"ruleId":"106","severity":1,"message":"112","line":76,"column":8,"nodeType":"108","endLine":76,"endColumn":10,"suggestions":"118"},{"ruleId":"106","severity":1,"message":"112","line":81,"column":8,"nodeType":"108","endLine":81,"endColumn":10,"suggestions":"119"},{"ruleId":"106","severity":1,"message":"112","line":86,"column":8,"nodeType":"108","endLine":86,"endColumn":10,"suggestions":"120"},{"ruleId":"106","severity":1,"message":"121","line":40,"column":8,"nodeType":"108","endLine":40,"endColumn":10,"suggestions":"122"},{"ruleId":"106","severity":1,"message":"123","line":60,"column":8,"nodeType":"108","endLine":60,"endColumn":10,"suggestions":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],["125"],["126"],"array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["127"],"React Hook useEffect has missing dependencies: 'dispatch' and 'isLoggedIn'. Either include them or remove the dependency array.",["128"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["129"],["130"],["131"],["132"],["133"],["134"],["135"],["136"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["137"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"139","fix":"143"},{"desc":"139","fix":"144"},{"desc":"139","fix":"145"},{"desc":"139","fix":"146"},{"desc":"139","fix":"147"},{"desc":"139","fix":"148"},{"desc":"139","fix":"149"},{"desc":"139","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [dispatch]",{"range":"155","text":"156"},"Update the dependencies array to be: [dispatch, isLoggedIn]",{"range":"157","text":"158"},{"range":"159","text":"156"},{"range":"160","text":"156"},{"range":"161","text":"156"},{"range":"162","text":"156"},{"range":"163","text":"156"},{"range":"164","text":"156"},{"range":"165","text":"156"},{"range":"166","text":"156"},"Update the dependencies array to be: [props]",{"range":"167","text":"168"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"169","text":"170"},[1042,1044],"[dispatch]",[1467,1469],"[dispatch, isLoggedIn]",[1637,1639],[1808,1810],[2002,2004],[2219,2221],[2398,2400],[2554,2556],[2713,2715],[2909,2911],[1454,1456],"[props]",[2262,2264],"[dispatch, props.id]"]